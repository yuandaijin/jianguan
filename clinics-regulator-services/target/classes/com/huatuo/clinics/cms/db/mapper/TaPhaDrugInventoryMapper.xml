<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huatuo.clinics.cms.db.mapper.TaPhaDrugInventoryMapper" >
  <resultMap id="BaseResultMap" type="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    <id column="drug_inv_id" property="drugInvId" jdbcType="CHAR" />
    <result column="pha_drug_id" property="phaDrugId" jdbcType="CHAR" />
    <result column="trade_name" property="tradeName" jdbcType="VARCHAR" />
    <result column="drug_spec" property="drugSpec" jdbcType="VARCHAR" />
    <result column="instock_date" property="instockDate" jdbcType="DATE" />
    <result column="instock_batch" property="instockBatch" jdbcType="VARCHAR" />
    <result column="manufacturer" property="manufacturer" jdbcType="VARCHAR" />
    <result column="pack_unit" property="packUnit" jdbcType="VARCHAR" />
    <result column="min_unit" property="minUnit" jdbcType="VARCHAR" />
    <result column="pack_qty" property="packQty" jdbcType="INTEGER" />
    <result column="min_qty" property="minQty" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="CHAR" />
    <result column="retail_min_price" property="retailMinPrice" jdbcType="REAL" />
    <result column="retail_price" property="retailPrice" jdbcType="REAL" />
  </resultMap>
  <resultMap type="com.huatuo.clinics.cms.db.bean.ZdyTaPhaDrugInventory" id="ZdyBaseResultMap" extends="BaseResultMap">
    <result column="pack_qty_total" property="packQtyTotal" jdbcType="INTEGER" />
    <result column="min_qty_total" property="minQtyTotal" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    drug_inv_id, pha_drug_id, trade_name, drug_spec, instock_date, instock_batch, manufacturer, 
    pack_unit, min_unit, pack_qty, min_qty, org_id, retail_min_price, retail_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ta_pha_drug_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from ta_pha_drug_inventory
    where drug_inv_id = #{drugInvId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    delete from ta_pha_drug_inventory
    where drug_inv_id = #{drugInvId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    delete from ta_pha_drug_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    insert into ta_pha_drug_inventory (drug_inv_id, pha_drug_id, trade_name, 
      drug_spec, instock_date, instock_batch, 
      manufacturer, pack_unit, min_unit, 
      pack_qty, min_qty, org_id, 
      retail_min_price, retail_price)
    values (#{drugInvId,jdbcType=CHAR}, #{phaDrugId,jdbcType=CHAR}, #{tradeName,jdbcType=VARCHAR}, 
      #{drugSpec,jdbcType=VARCHAR}, #{instockDate,jdbcType=DATE}, #{instockBatch,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{packUnit,jdbcType=VARCHAR}, #{minUnit,jdbcType=VARCHAR}, 
      #{packQty,jdbcType=INTEGER}, #{minQty,jdbcType=INTEGER}, #{orgId,jdbcType=CHAR}, 
      #{retailMinPrice,jdbcType=REAL}, #{retailPrice,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    insert into ta_pha_drug_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="drugInvId != null" >
        drug_inv_id,
      </if>
      <if test="phaDrugId != null" >
        pha_drug_id,
      </if>
      <if test="tradeName != null" >
        trade_name,
      </if>
      <if test="drugSpec != null" >
        drug_spec,
      </if>
      <if test="instockDate != null" >
        instock_date,
      </if>
      <if test="instockBatch != null" >
        instock_batch,
      </if>
      <if test="manufacturer != null" >
        manufacturer,
      </if>
      <if test="packUnit != null" >
        pack_unit,
      </if>
      <if test="minUnit != null" >
        min_unit,
      </if>
      <if test="packQty != null" >
        pack_qty,
      </if>
      <if test="minQty != null" >
        min_qty,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="retailMinPrice != null" >
        retail_min_price,
      </if>
      <if test="retailPrice != null" >
        retail_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="drugInvId != null" >
        #{drugInvId,jdbcType=CHAR},
      </if>
      <if test="phaDrugId != null" >
        #{phaDrugId,jdbcType=CHAR},
      </if>
      <if test="tradeName != null" >
        #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="drugSpec != null" >
        #{drugSpec,jdbcType=VARCHAR},
      </if>
      <if test="instockDate != null" >
        #{instockDate,jdbcType=DATE},
      </if>
      <if test="instockBatch != null" >
        #{instockBatch,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null" >
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="packUnit != null" >
        #{packUnit,jdbcType=VARCHAR},
      </if>
      <if test="minUnit != null" >
        #{minUnit,jdbcType=VARCHAR},
      </if>
      <if test="packQty != null" >
        #{packQty,jdbcType=INTEGER},
      </if>
      <if test="minQty != null" >
        #{minQty,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=CHAR},
      </if>
      <if test="retailMinPrice != null" >
        #{retailMinPrice,jdbcType=REAL},
      </if>
      <if test="retailPrice != null" >
        #{retailPrice,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    select count(*) from ta_pha_drug_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    update ta_pha_drug_inventory
    <set >
      <if test="record.drugInvId != null" >
        drug_inv_id = #{record.drugInvId,jdbcType=CHAR},
      </if>
      <if test="record.phaDrugId != null" >
        pha_drug_id = #{record.phaDrugId,jdbcType=CHAR},
      </if>
      <if test="record.tradeName != null" >
        trade_name = #{record.tradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.drugSpec != null" >
        drug_spec = #{record.drugSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.instockDate != null" >
        instock_date = #{record.instockDate,jdbcType=DATE},
      </if>
      <if test="record.instockBatch != null" >
        instock_batch = #{record.instockBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null" >
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.packUnit != null" >
        pack_unit = #{record.packUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.minUnit != null" >
        min_unit = #{record.minUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.packQty != null" >
        pack_qty = #{record.packQty,jdbcType=INTEGER},
      </if>
      <if test="record.minQty != null" >
        min_qty = #{record.minQty,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=CHAR},
      </if>
      <if test="record.retailMinPrice != null" >
        retail_min_price = #{record.retailMinPrice,jdbcType=REAL},
      </if>
      <if test="record.retailPrice != null" >
        retail_price = #{record.retailPrice,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    update ta_pha_drug_inventory
    set drug_inv_id = #{record.drugInvId,jdbcType=CHAR},
      pha_drug_id = #{record.phaDrugId,jdbcType=CHAR},
      trade_name = #{record.tradeName,jdbcType=VARCHAR},
      drug_spec = #{record.drugSpec,jdbcType=VARCHAR},
      instock_date = #{record.instockDate,jdbcType=DATE},
      instock_batch = #{record.instockBatch,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      pack_unit = #{record.packUnit,jdbcType=VARCHAR},
      min_unit = #{record.minUnit,jdbcType=VARCHAR},
      pack_qty = #{record.packQty,jdbcType=INTEGER},
      min_qty = #{record.minQty,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=CHAR},
      retail_min_price = #{record.retailMinPrice,jdbcType=REAL},
      retail_price = #{record.retailPrice,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    update ta_pha_drug_inventory
    <set >
      <if test="phaDrugId != null" >
        pha_drug_id = #{phaDrugId,jdbcType=CHAR},
      </if>
      <if test="tradeName != null" >
        trade_name = #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="drugSpec != null" >
        drug_spec = #{drugSpec,jdbcType=VARCHAR},
      </if>
      <if test="instockDate != null" >
        instock_date = #{instockDate,jdbcType=DATE},
      </if>
      <if test="instockBatch != null" >
        instock_batch = #{instockBatch,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null" >
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="packUnit != null" >
        pack_unit = #{packUnit,jdbcType=VARCHAR},
      </if>
      <if test="minUnit != null" >
        min_unit = #{minUnit,jdbcType=VARCHAR},
      </if>
      <if test="packQty != null" >
        pack_qty = #{packQty,jdbcType=INTEGER},
      </if>
      <if test="minQty != null" >
        min_qty = #{minQty,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=CHAR},
      </if>
      <if test="retailMinPrice != null" >
        retail_min_price = #{retailMinPrice,jdbcType=REAL},
      </if>
      <if test="retailPrice != null" >
        retail_price = #{retailPrice,jdbcType=REAL},
      </if>
    </set>
    where drug_inv_id = #{drugInvId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 13 15:53:21 CST 2016.
    -->
    update ta_pha_drug_inventory
    set pha_drug_id = #{phaDrugId,jdbcType=CHAR},
      trade_name = #{tradeName,jdbcType=VARCHAR},
      drug_spec = #{drugSpec,jdbcType=VARCHAR},
      instock_date = #{instockDate,jdbcType=DATE},
      instock_batch = #{instockBatch,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      pack_unit = #{packUnit,jdbcType=VARCHAR},
      min_unit = #{minUnit,jdbcType=VARCHAR},
      pack_qty = #{packQty,jdbcType=INTEGER},
      min_qty = #{minQty,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=CHAR},
      retail_min_price = #{retailMinPrice,jdbcType=REAL},
      retail_price = #{retailPrice,jdbcType=REAL}
    where drug_inv_id = #{drugInvId,jdbcType=CHAR}
  </update>

 <!-- 自定义sql -->
  <update id="updateByPhaDrugID" parameterType="map">
    <!--
 	根据药品ID更新库存数量
    -->
    update ta_pha_drug_inventory
    set pack_qty = pack_qty + #{record.packQty,jdbcType=OTHER},
      min_qty = min_qty +  #{record.minQty,jdbcType=OTHER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="countList" parameterType="java.util.Map" resultType="java.lang.Integer">
  SELECT COUNT(DISTINCT di.pha_drug_id) FROM ta_pha_drug_inventory di JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id
    <where>
            (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			and i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
		<if test="drugType1!=null and drugType2!=null">
			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER})
		</if>
		<if test="drugType3!=null">
			and  i.drug_type =#{drugType3,jdbcType=OTHER}
		</if>
		<if test="orgId!=null">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
			and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
   <select id="countListForStocktaking" parameterType="java.util.Map" resultType="java.lang.Integer">
     SELECT COUNT(di.pha_drug_id) FROM ta_pha_drug_inventory di JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id
    <where>
            (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			and i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
<!-- 		<if test="drugType1!=null and drugType2!=null"> -->
<!-- 			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER}) -->
<!-- 		</if> -->
<!-- 		<if test="drugType3!=null"> -->
<!-- 			and  i.drug_type =#{drugType3,jdbcType=OTHER} -->
<!-- 		</if> -->
		<if test="drugType!=null">
			and  i.drug_type =#{drugType,jdbcType=OTHER}
		</if>
		<if test="orgId!=null">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
			and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <select id="queryList" parameterType="java.util.Map" resultMap="ZdyBaseResultMap">
   SELECT di.*,sum(pack_qty) AS pack_qty_total ,sum(min_qty) AS  min_qty_total FROM ta_pha_drug_inventory di 
            JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id 
    <where>
            (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			and  i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
	    <if test="drugType1!=null and drugType2!=null">
			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER})
		</if>
		<if test="drugType3!=null">
			and  i.drug_type =#{drugType3,jdbcType=OTHER}
		</if>
		<if test="orgId!=null">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
			and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
		    GROUP BY di.pha_drug_id
		<if test="start != null and pageSize != null">
		    limit #{start,jdbcType=OTHER}, #{pageSize,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <select id="queryListForStocktaking" parameterType="java.util.Map" resultMap="ZdyBaseResultMap">
   SELECT di.*,pack_qty AS pack_qty_total ,min_qty AS  min_qty_total FROM ta_pha_drug_inventory di 
            JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id 
    <where>
		<if test="type!=null">
			and  i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
		<if test="drugType!=null and drugType!=''">
			and  i.drug_type like concat('%',#{drugType,jdbcType=OTHER},'%')
		</if>
		<if test="orgId!=null and orgId!=''">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null and pharmacyId!=''">
			and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
			GROUP BY instock_batch, di.pha_drug_id
			ORDER BY di.trade_name,instock_batch ASC
<!-- 		    GROUP BY di.pha_drug_id -->
		<if test="start != null and pageSize != null">
		    limit #{start,jdbcType=OTHER}, #{pageSize,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <select id="countListForKey" parameterType="java.util.Map" resultType="java.lang.Integer">
  SELECT COUNT(DISTINCT di.pha_drug_id) FROM ta_pha_drug_inventory di JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id
    <where>
            (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			and i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
			<if test="drugType1!=null and drugType2!=null">
			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER})
		</if>
		<if test="drugType3!=null">
			and  i.drug_type =#{drugType3,jdbcType=OTHER}
		</if>
		<if test="key!=null">
			and (i.trade_name like #{key,jdbcType=OTHER} or  i.t_spell_code like #{key,jdbcType=OTHER} or i.t_wb_code like #{key,jdbcType=OTHER})
		</if>
		<if test="orgId!=null">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
		    and	i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
   <select id="countListByKeyForStocktaking" parameterType="java.util.Map" resultType="java.lang.Integer">
  SELECT COUNT(di.pha_drug_id) FROM ta_pha_drug_inventory di JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id
    <where>
            (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			and i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
			<if test="drugType1!=null and drugType2!=null">
			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER})
		</if>
		<if test="drugType3!=null">
			and  i.drug_type =#{drugType3,jdbcType=OTHER}
		</if>
		<if test="key!=null">
			and (i.trade_name like #{key,jdbcType=OTHER} or  i.t_spell_code like #{key,jdbcType=OTHER} or i.t_wb_code like #{key,jdbcType=OTHER})
		</if>
		<if test="orgId!=null">
			and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
		    and	i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <resultMap id="zdyDrugInfoAndInventory" type="com.huatuo.clinics.cms.bean.ZdyDrugInfoAndInventory" >
    <id column="drug_inv_id" property="drugInvId" jdbcType="CHAR" />
    <result column="pha_drug_id" property="phaDrugId" jdbcType="CHAR" />
    <result column="pack_qty" property="packQty" jdbcType="INTEGER" />
    <result column="min_qty" property="minQty" jdbcType="INTEGER" />
    <result column="pack_qty_total" property="packQtyTotal" jdbcType="INTEGER" />
    <result column="min_qty_total" property="minQtyTotal" jdbcType="INTEGER" />
    
    <result column="drug_trade_id" property="drugTradeId" jdbcType="OTHER" />
    <result column="org_id" property="orgId" jdbcType="OTHER" />
    <result column="pharmacy_id" property="pharmacyId" jdbcType="OTHER" />
    <result column="trade_name" property="tradeName" jdbcType="OTHER" />
    <result column="idrug" property="drugSpec" jdbcType="OTHER" />
    <result column="comm_name" property="commName" jdbcType="OTHER" />
    <result column="dose_form" property="doseForm" jdbcType="OTHER" />
    <result column="spell_code" property="spellCode" jdbcType="OTHER" />
    <result column="wb_code" property="wbCode" jdbcType="OTHER" />
    <result column="t_spell_code" property="tSpellCode" jdbcType="OTHER" />
    <result column="t_wb_code" property="tWbCode" jdbcType="OTHER" />
    <result column="alias_name" property="aliasName" jdbcType="OTHER" />
    <result column="component" property="component" jdbcType="OTHER" />
    <result column="drug_type" property="drugType" jdbcType="OTHER" />
    <result column="drug_sub_type" property="drugSubType" jdbcType="OTHER" />
    <result column="suit" property="suit" jdbcType="OTHER" />
    <result column="pha_effect" property="phaEffect" jdbcType="OTHER" />
    <result column="tox_class" property="toxClass" jdbcType="OTHER" />
    <result column="physics_trait" property="physicsTrait" jdbcType="OTHER" />
    <result column="otc_type" property="otcType" jdbcType="OTHER" />
    <result column="med_type" property="medType" jdbcType="OTHER" />
    <result column="volume" property="volume" jdbcType="OTHER" />
    <result column="vol_unit" property="volUnit" jdbcType="OTHER" />
    <result column="weight" property="weight" jdbcType="OTHER" />
    <result column="weight_unit" property="weightUnit" jdbcType="OTHER" />
    <result column="concentration" property="concentration" jdbcType="OTHER" />
    <result column="def_freq" property="defFreq" jdbcType="OTHER" />
    <result column="def_dose_qty" property="defDoseQty" jdbcType="OTHER" />
    <result column="def_dose_unit" property="defDoseUnit" jdbcType="OTHER" />
    <result column="def_route" property="defRoute" jdbcType="OTHER" />
    <result column="bar_code" property="barCode" jdbcType="OTHER" />
    <result column="manufacturer" property="manufacturer" jdbcType="OTHER" />
    <result column="ncmc_flg" property="ncmcFlg" jdbcType="OTHER" />
    <result column="approval" property="approval" jdbcType="OTHER" />
    <result column="base_drug_flg" property="baseDrugFlg" jdbcType="OTHER" />
    <result column="kick_back" property="kickBack" jdbcType="OTHER" />
    <result column="tabu" property="tabu" jdbcType="OTHER" />
    <result column="matters" property="matters" jdbcType="OTHER" />
    <result column="valid_flg" property="validFlg" jdbcType="OTHER" />
    <result column="min_unit" property="minUnit" jdbcType="OTHER" />
    <result column="pack_unit" property="packUnit" jdbcType="OTHER" />
    <result column="iconvqty" property="convQty" jdbcType="OTHER" />
    <result column="pack_retail_price" property="packRetailPrice" jdbcType="OTHER" />
    <result column="min_retail_price" property="minRetailPrice" jdbcType="OTHER" />
    <result column="stock_max" property="stockMax" jdbcType="OTHER" />
    <result column="stock_min" property="stockMin" jdbcType="OTHER" />
     <result column="instock_batch" property="instockBatch" jdbcType="OTHER" />
    <result column="wholesale_price" property="wholesalePrice" jdbcType="OTHER" />
  </resultMap>
  
  <select id="queryListForKey" parameterType="java.util.Map" resultMap="zdyDrugInfoAndInventory">
  SELECT i.trade_name,di.*,i.*,i.drug_spec idrug,i.conv_qty iconvqty,sum(pack_qty) AS pack_qty_total ,sum(min_qty) AS  min_qty_total FROM ta_pha_drug_inventory di 
            JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id 
    <where>
             (di.pack_qty!=0 OR di.min_qty!=0)
		<if test="type!=null">
			 and i.drug_sub_type =#{type,jdbcType=OTHER}
		</if>
			<if test="drugType1!=null and drugType2!=null">
			and ( i.drug_type =#{drugType1,jdbcType=OTHER} or i.drug_type =#{drugType2,jdbcType=OTHER})
		</if>
		<if test="drugType3!=null">
			and  i.drug_type =#{drugType3,jdbcType=OTHER}
		</if>
		<if test="key!=null">
			 and (i.trade_name like #{key,jdbcType=OTHER} or  i.t_spell_code like #{key,jdbcType=OTHER} or i.t_wb_code like #{key,jdbcType=OTHER})
		</if>
		<if test="orgId!=null">
			 and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
			 and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
		GROUP BY di.pha_drug_id
		<if test="start != null and pageSize != null">
		    limit #{start,jdbcType=OTHER}, #{pageSize,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <select id="queryListByKeyForStocktaking" parameterType="java.util.Map" resultMap="zdyDrugInfoAndInventory">
  SELECT di.*,i.*,i.drug_spec idrug,i.conv_qty iconvqty,pack_qty AS pack_qty_total ,min_qty AS  min_qty_total FROM ta_pha_drug_inventory di 
            JOIN ta_pha_drug_info i ON di.pha_drug_id=i.pha_drug_id 
    <where>
		<if test="type!=null and type!=''">
			 and i.drug_type =#{type,jdbcType=OTHER}
		</if>
		<if test="key!=null">
			 and (i.trade_name like #{key,jdbcType=OTHER} or  i.t_spell_code like #{key,jdbcType=OTHER} or i.t_wb_code like #{key,jdbcType=OTHER})
		</if>
		<if test="orgId!=null">
			 and i.org_id=#{orgId,jdbcType=OTHER}
		</if>
		<if test="pharmacyId!=null">
			 and i.pharmacy_id=#{pharmacyId,jdbcType=OTHER}
		</if>
		GROUP BY instock_batch, di.pha_drug_id
		ORDER BY instock_batch ASC
		<if test="start != null and pageSize != null">
		    limit #{start,jdbcType=OTHER}, #{pageSize,jdbcType=OTHER}
		</if>
   </where>
  </select>
  
  <select id="queryByPhaDrugAndNum" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from ta_pha_drug_inventory
	where (pack_qty>0 or min_qty>0)
	and pha_drug_id = #{phaDrugId}
  	order by instock_date asc
  	limit 0,1
<!--   	limit #{index},1 -->
  </select>
  
  <update id="updatePackQty" parameterType="com.huatuo.clinics.cms.db.bean.TaPhaDrugInventory" >
    update ta_pha_drug_inventory
    <set >
      <if test="packQty != 0  and minQty != 0   and convQty == 0" >
        pack_qty =pack_qty-#{packQty,jdbcType=INTEGER},
        min_qty = min_qty-#{minQty,jdbcType=INTEGER},
      </if>
       <if test="packQty != 0 and minQty != 0 and convQty != 0" >
       	pack_qty =pack_qty-#{packQty,jdbcType=INTEGER}-1,
        min_qty = min_qty+#{convQty,jdbcType=INTEGER}-#{minQty,jdbcType=INTEGER},
      </if>
      
      <if test="packQty != 0 and minQty ==  0  and  convQty == 0" >
        pack_qty =pack_qty-#{packQty,jdbcType=INTEGER}
      </if>
      <if test="packQty == 0 and convQty != 0 and minQty != 0" >
       	pack_qty =pack_qty-1,
        min_qty = min_qty+#{convQty,jdbcType=INTEGER}-#{minQty,jdbcType=INTEGER},
      </if>
      <if test="packQty == 0 and convQty == 0 and minQty != 0" >
        min_qty = min_qty-#{minQty,jdbcType=INTEGER},
      </if>
    </set>
    where pha_drug_id = #{phaDrugId,jdbcType=CHAR} and instock_batch=#{instockBatch,jdbcType=CHAR}
  </update>
<!--   拿取最近几次的最高收费包装价格 -->
  <select id="getListPrice" parameterType="map" resultMap="BaseResultMap">
  	SELECT * FROM ta_pha_drug_inventory
		WHERE pha_drug_id = #{phaDrugId}
	  	AND org_id = #{orgId}
	  	AND (pack_qty > 0 or min_qty > 0)
	  	Order By instock_batch
  </select>
<!--   拿取最近几次的最高收费包装价格 -->
  <select id="getMaxActualPrice" parameterType="map" resultType="java.lang.Float">
  	 SELECT MAX(a.retail_price)  FROM(  SELECT * FROM ta_pha_drug_inventory
	WHERE pha_drug_id = #{phaDrugId}
  	AND org_id = #{orgId}
  	AND (pack_qty > 0 OR min_qty > 0)
  	ORDER BY instock_date
  	LIMIT 0,#{number}) a
  </select>
<!--   拿取最近几次的最高收费包装价格 -->
  <select id="getMinActualPrice" parameterType="map" resultType="java.lang.Float">
   SELECT MAX(a.retail_min_price)  FROM(  SELECT * FROM ta_pha_drug_inventory
	WHERE pha_drug_id = #{phaDrugId}
  	AND org_id = #{orgId}
  	AND (pack_qty > 0 OR min_qty > 0)
  	ORDER BY instock_date
  	LIMIT 0,#{number}) a
  </select>
</mapper>